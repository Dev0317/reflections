When would you want to use a remote repository rather than keeping all your work
local?

- When you're collaborating with others.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

- If others are working on your remote repository you are able to decide which changes you would like before they are automatically pulled

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

- Forking is a functionality unqique to Github that allows you to clone a repository on Github to your Github account and give recognition to the original

- Branch allows you to extend a master branch in a repository

- Cloning is the process of copying a repository to another location

What is the benefit of having a copy of the last known state of the remote
stored locally?

- If you want to merge a remote branch into a local branch which conflict and you're about to go offline then you can download the remote changes to your local copy of the remote branch and resolve the conflict later

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

- You could use another version-control software, such as Dropbox.
- It would be harder to make experimental changes without worrying about breaking the original code because Git provides a very elegant solution to that issue
- It would be easier for the team to learn how to collaborate because there is quite a steep learning curve to Git and Github

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here

Describe the differences between forks, clones, and branches. When would you use one instead of another?
